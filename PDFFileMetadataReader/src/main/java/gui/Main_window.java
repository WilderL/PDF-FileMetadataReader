/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.table.DefaultTableModel;
import pdfmetadatareader.PDFFile;
import pdfmetadatareader.PDFFileFinder;

/**
 *
 * @author User
 */
public final class Main_window extends javax.swing.JFrame {

    private EncontrarRuta metodos = new EncontrarRuta();
    private PdfDetailWindow Detail;
    private List<PDFFile> pdfFiles;
    private String [] headJ1 = new String[]{"Nombre", "Autor", "Asunto"};
    private PDFFileFinder Save = new PDFFileFinder();
    
    public void savePDFFileList() {
        Save.savePDFFileList(pdfFiles);
        pdfFiles = Save.loadPDFFileList();
    }
    
    public void ordenarAutor(){
        pdfFiles = Save.sortByAuthor(pdfFiles);
        savePDFFileList();
        createTable();
    }
    
    public void ordenarAsunto(){
        pdfFiles = Save.sortBySubject(pdfFiles);
        savePDFFileList();
        createTable();
    }
    
    private DefaultTableModel model = new DefaultTableModel(){
            boolean[] canEdit = new boolean[]{false,false,false};
                @Override
            public boolean isCellEditable(int row, int column) {
                return canEdit[column];
            }
        };
    
    public void chargerpdfs(){
        model.setRowCount(0);
        for (int i = 0; i < pdfFiles.size(); i++) {
            PDFFile pdf = pdfFiles.get(i);    
            model.addRow(new Object[]{pdf.getNombreArchivo(),pdf.getAutor(),pdf.getAsunto()});
        }
    }
    
   
    
    public void createTable(){
        model.setColumnIdentifiers(headJ1);
        jTable1.setModel(model);
        chargerpdfs();
    }
    
    public Main_window(List<PDFFile> pdfFiles) {
        initComponents();
        this.pdfFiles = pdfFiles;
        createTable();
    }
    
    public JButton getMiBoton() {
        return Select_button;
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu3 = new javax.swing.JMenu();
        Select_button = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuAutor = new javax.swing.JMenuItem();
        jMenuItemAsunto = new javax.swing.JMenuItem();

        jMenu3.setText("jMenu3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        Select_button.setText("Seleccionar");
        Select_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Select_buttonMouseClicked(evt);
            }
        });
        Select_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Select_buttonActionPerformed(evt);
            }
        });

        jScrollPane2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jScrollPane2MouseDragged(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Archivo", "Asunto", "Autor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setDragEnabled(true);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable1);

        jMenu1.setText("File");

        jMenuItem1.setText("CAMBIAR RUTA");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ordenar");

        jMenuAutor.setText("Por autor");
        jMenuAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAutorActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuAutor);

        jMenuItemAsunto.setText("Por asunto");
        jMenuItemAsunto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAsuntoActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemAsunto);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Select_button)
                .addGap(196, 196, 196))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Select_button))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Select_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Select_buttonActionPerformed
        int idFile = jTable1.getSelectedRow();
        PDFFile pdfFile = pdfFiles.get(idFile);
        Detail = new PdfDetailWindow(this, pdfFile);
        Detail.setVisible(true);
        Select_button.setEnabled(false);
    }//GEN-LAST:event_Select_buttonActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        metodos.delete();
        String folderPath = metodos.find();
        try {
            List<PDFFile> newpdfList = Save.findPdfFiles(folderPath);
            
            for (PDFFile pdf : newpdfList) {
                pdfFiles.add(pdf);
            }
            savePDFFileList();
        } catch (IOException ex) {
            Logger.getLogger(Main_window.class.getName()).log(Level.SEVERE, null, ex);
        }
        createTable();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jScrollPane2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane2MouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane2MouseDragged

    private void Select_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Select_buttonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Select_buttonMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    }//GEN-LAST:event_formWindowOpened

    private void jMenuItemAsuntoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAsuntoActionPerformed
        ordenarAsunto();
    }//GEN-LAST:event_jMenuItemAsuntoActionPerformed

    private void jMenuAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAutorActionPerformed
        ordenarAutor();
    }//GEN-LAST:event_jMenuAutorActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Select_button;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuItem jMenuAutor;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItemAsunto;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
